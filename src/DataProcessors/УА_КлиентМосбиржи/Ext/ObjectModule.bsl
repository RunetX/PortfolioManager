#Область Переменные

Перем Коннектор, ХостАпи;

#КонецОбласти

#Область ПрограммныйИнтерфейс

Функция Инит(Параметры = Неопределено) Экспорт
	
	Если Параметры = Неопределено Тогда	
		_ЗаполнитьПараметрыПоУмолчанию();
		Возврат ЭтотОбъект;	
	КонецЕсли;
	
	Параметры.Свойство("Коннектор", Коннектор);
	Параметры.Свойство("ХостАпи", 	ХостАпи);
	
	Возврат ЭтотОбъект;
	
КонецФункции

Функция ДанныеИндекса(ИмяИндекса, ПараметрыЗапроса) Экспорт

	ШаблонПути = "/iss/statistics/engines/stock/markets/index/analytics/%1.json";
	Урл = СтрШаблон(ШаблонПути, ИмяИндекса);
	Ответ = Коннектор.Get(ХостАпи + Урл, ПараметрыЗапроса);
	
	Возврат _РезультатОбработкиHTTPОтвета(Ответ);

КонецФункции

Функция ДанныеИнструментов(ТикерыМассив, РежимТоргов = "TQBR") Экспорт
	
	ТикерыСтрокой = СтрСоединить(ТикерыМассив, ",");
	
	ПараметрыЗапроса = _ДанныеИнструментовОписаниеПараметров();
	ПараметрыЗапроса.Вставить("securities", ТикерыСтрокой);

	ШаблонПути = "/iss/engines/stock/markets/shares/boards/%1/securities.json";
	Урл = СтрШаблон(ШаблонПути, РежимТоргов);
	Ответ = Коннектор.Get(ХостАпи + Урл, ПараметрыЗапроса);
	
	Возврат _РезультатОбработкиHTTPОтвета(Ответ);
	
КонецФункции

Функция ДанныеЛотов(ТикерыМассив) Экспорт

	ТикерыСтрокой = СтрСоединить(ТикерыМассив, ",");
	
	ПараметрыЗапроса   = _ДанныеЛотовОписаниеПараметров();
	ПараметрыЗапроса.Вставить("q", ТикерыСтрокой);
	
	Урл = "/iss/securities.json";
   	Ответ = Коннектор.Get(ХостАпи + Урл, ПараметрыЗапроса);
   
   	Возврат _РезультатОбработкиHTTPОтвета(Ответ);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура _ЗаполнитьПараметрыПоУмолчанию()

	Коннектор = Вычислить("УА_КоннекторHTTP");
	ХостАпи   = "https://iss.moex.com";
	
КонецПроцедуры

#Область _Описания

Функция _HTTP_OK(КодСостояния)
	Возврат КодСостояния > 199 И КодСостояния < 300;
КонецФункции

Функция _HTTP_ОшибкаПараметров()
	Возврат 400;
КонецФункции

Функция _HTTP_ОшибкаАутентификации()
	Возврат 401;
КонецФункции

Функция _HTTP_ОшибкаДоступа()
	Возврат 403;
КонецФункции

Функция _HTTP_ОшибкаОбработкиДанных()
	Возврат 422;
КонецФункции

Функция _HTTP_СервисНедоступен()
	Возврат 502;
КонецФункции

Функция _ДанныеИнструментовОписаниеПараметров()

	Параметры = Новый Соответствие;
	Параметры.Вставить("securities", "");
	Параметры.Вставить("iss.meta",   "off");
	Параметры.Вставить("iss.data",   "on");
	Параметры.Вставить("iss.only",   "marketdata");
	
	Возврат Параметры;
	
КонецФункции

Функция _ДанныеЛотовОписаниеПараметров()

	Параметры = Новый Соответствие;
	Параметры.Вставить("q", 		 "");
	Параметры.Вставить("iss.meta",   "off");
	Параметры.Вставить("iss.only",   "description");
	Параметры.Вставить("limit",   	 100);
	
	Возврат Параметры;
	
КонецФункции

Функция _ОписаниеРезультатаВызоваМетодаAPI()

	Результат = Новый Структура;

	Результат.Вставить("ПроизошлаОшибка", Ложь);
	Результат.Вставить("ТекстОшибки", 	  "");
	Результат.Вставить("Данные");
	Результат.Вставить("КодСостояния");
	Результат.Вставить("ОтветСервераТекст","");
	Результат.Вставить("ОбратнаяСвязь");

	Возврат Результат;
	
КонецФункции

#КонецОбласти

Функция _РезультатОбработкиHTTPОтвета(HTTPОтвет)

	Результат = _ОписаниеРезультатаВызоваМетодаAPI();

	Результат.КодСостояния = HTTPОтвет.КодСостояния;
	
	Если _HTTP_OK(HTTPОтвет.КодСостояния) Тогда

		Если HTTPОтвет.Тело.Размер() > 0 Тогда
			ContentType = HTTPОтвет.Заголовки.Получить("Content-Type");
			Если ContentType = "application/octet-stream" Или ContentType = "application/zip" Или ContentType = "application/pdf" Тогда
				Результат.Данные = Коннектор.КакДвоичныеДанные(HTTPОтвет);
			Иначе
				Попытка
					Данные = Коннектор.КакJson(HTTPОтвет);
					Результат.Данные = УА_ОбщегоНазначения.ФиксированныеДанные(Данные);
				Исключение
					Результат.ПроизошлаОшибка = Истина;
					Результат.ТекстОшибки = "Ошибка при разборе JSON ответа: " + ОписаниеОшибки();
				КонецПопытки;
			Результат.ОтветСервераТекст = Коннектор.КакТекст(HTTPОтвет);
			КонецЕсли;

		КонецЕсли;

	Иначе

		ОшибкаАутентификации = HTTPОтвет.КодСостояния = _HTTP_ОшибкаАутентификации();
		
		ОписаниеОшибкиТелоОтвета = Коннектор.КакТекст(HTTPОтвет);
		Результат.ОтветСервераТекст = ОписаниеОшибкиТелоОтвета;
				
		Результат.ПроизошлаОшибка = Истина;
		
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

#КонецОбласти