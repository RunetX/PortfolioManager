#Область ПрограммныйИнтерфейс

Функция ТаблицаЗаполненияСостава(Тикер, ТаблицаЗаполнения) Экспорт
	
	Возврат _ТаблицаЗаполненияСостава(Тикер, ТаблицаЗаполнения);
	
КонецФункции

Функция ИндексПоУмолчанию() Экспорт

	Возврат ПустаяСсылка();	
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область _Описания

Функция _ИндексТикер()
    Возврат УА_Константы.ИндексТикер();
КонецФункции

Функция _ИндексВес()
    Возврат УА_Константы.ИндексВес();
КонецФункции

Функция _ИндексНаименование()
	Возврат УА_Константы.ИндексНаименование(); 	
КонецФункции

Функция _РазмерСтраницыСЭлементамиИндекса()
	Возврат УА_Константы.РазмерСтраницыСЭлементамиИндекса();	
КонецФункции

#КонецОбласти

Функция _ТаблицаЗаполненияСостава(Тикер, ТаблицаЗаполнения)
	
	Результат = УА_ОбщегоНазначения.ОписаниеРезультата();
	
	ТекущееСмещение = 0;
	ОбщееКоличество = -1;
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("limit", _РазмерСтраницыСЭлементамиИндекса());
	
	КлиентАпи = УА_ОбщегоНазначения.КлиентМосбиржи();

	Пока ТекущееСмещение < ОбщееКоличество Или ОбщееКоличество = -1 Цикл

		Если ОбщееКоличество <> -1 Тогда
			ПараметрыЗапроса.Вставить("start", ТекущееСмещение);
		КонецЕсли;

		ПорцияИндекса = КлиентАпи.ДанныеИндекса(Тикер, ПараметрыЗапроса);

		Если ПорцияИндекса.ПроизошлаОшибка Тогда
			Результат.ПроизошлаОшибка = Истина;
			Результат.ТекстОшибки = "Ошибка при получении данных индекса: " + ПорцияИндекса.ТекстОшибки;
			Возврат Результат;
		КонецЕсли;

		ДанныеПорции = ПорцияИндекса.Данные.Получить("analytics");
		Если ДанныеПорции = Неопределено Тогда
			Результат.ПроизошлаОшибка = Истина;
			Результат.ТекстОшибки = "Ошибка: Отсутствует ключ 'analytics' в ответе сервера при получении данных индекса.";
			Возврат Результат;
		КонецЕсли;

		МассивПозиций = ДанныеПорции.Получить("data");
		Если МассивПозиций = Неопределено Тогда
			Результат.ПроизошлаОшибка = Истина;
			Результат.ТекстОшибки = "Ошибка: Отсутствует ключ 'data' в 'analytics' при получении данных индекса.";
			Возврат Результат;
		КонецЕсли;

		// Обновляем общее количество данных и текущее смещение после первой порции
		Если ОбщееКоличество = -1 Тогда
			КурсорДанные = ПорцияИндекса.Данные.Получить("analytics.cursor");
			Если КурсорДанные <> Неопределено И КурсорДанные.Получить("data").Количество() > 0 Тогда
				ОбщееКоличество = КурсорДанные.Получить("data")[0][1]; // TOTAL
				РазмерСтраницы = КурсорДанные.Получить("data")[0][2]; // PAGESIZE
			Иначе
				Результат.ПроизошлаОшибка = Истина;
				Результат.ТекстОшибки = "Ошибка: Не удалось получить данные курсора (TOTAL, PAGESIZE) при получении данных индекса.";
				Возврат Результат;
			КонецЕсли;
		КонецЕсли;
		
		Для Каждого Позиция ИЗ МассивПозиций Цикл
			// Проверяем тип и достаточное количество элементов, используя функции вместо констант
			Если ТипЗнч(Позиция) = Тип("ФиксированныйМассив") И Позиция.Количество() > _ИндексВес() Тогда
				
				ТикерИнструмента = Позиция[_ИндексТикер()];
				
				Инструмент = Справочники.УА_БиржевыеИнструменты.НайтиПоКоду(ТикерИнструмента);
				
				Если Не ЗначениеЗаполнено(Инструмент) Тогда
					
					НовыйИнструмент = Справочники.УА_БиржевыеИнструменты.СоздатьЭлемент();
					НовыйИнструмент.Наименование = Позиция[_ИндексНаименование()];
					НовыйИнструмент.Код = ТикерИнструмента;
					НовыйИнструмент.Записать();
					
					Инструмент = НовыйИнструмент.Ссылка;
					
				КонецЕсли;
					
				НоваяСтрока = ТаблицаЗаполнения.Добавить();
				НоваяСтрока.Инструмент = Инструмент;
				НоваяСтрока.Вес        = Позиция[_ИндексВес()];
								
			Иначе
				Сообщить("Внимание: Некорректный формат позиции в данных индекса.");
			КонецЕсли;
		КонецЦикла;
		
		ТекущееСмещение = ТекущееСмещение + РазмерСтраницы;

	КонецЦикла;
	
	ТаблицаЗаполнения.Сортировать("Вес Убыв");
	
	Результат.Данные = ТаблицаЗаполнения;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти