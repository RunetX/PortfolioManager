#Область ПрограммныйИнтерфейс

Функция ТаблицаЛотовИнструментов(Инструменты = Неопределено) Экспорт
	
	Результат = УА_ОбщегоНазначения.ОписаниеРезультата();
	
	ТаблицаЛотов = _ТаблицаЛотов();
	
	Если Инструменты = Неопределено Тогда
		Инструменты = _ВсеИнструменты();
	КонецЕсли;
	
	Тикеры = Инструменты.ВыгрузитьКолонку("Тикер");
	
	КлиентАпи = УА_ОбщегоНазначения.КлиентМосбиржи();
	
	ОтветАпи = КлиентАпи.ДанныеЛотов(Тикеры);

	Если ОтветАпи.ПроизошлаОшибка Тогда
	   	Результат.ПроизошлаОшибка = Истина;
	   	Результат.ТекстОшибки = "Ошибка при получении размеров лотов: " + ОтветАпи.ТекстОшибки;
	   	Возврат Результат;
   	КонецЕсли;
   
	ДанныеОписания = ОтветАпи.Данные.Получить("description");
	Если ДанныеОписания = Неопределено Тогда
	   	Результат.ПроизошлаОшибка = Истина;
	   	Результат.ТекстОшибки = "Отсутствует блок 'description' в ответе API";
	   	Возврат Результат;
	КонецЕсли;

	МассивДанных = ДанныеОписания.Получить("data");
	Колонки = ДанныеОписания.Получить("columns");

	Если МассивДанных = Неопределено Или Колонки = Неопределено Тогда
	   	Результат.ПроизошлаОшибка = Истина;
	   	Результат.ТекстОшибки = "Отсутствуют данные или колонки в блоке 'description'";
	   	Возврат Результат;
	КонецЕсли;

	// Находим индексы нужных колонок
	ИндексТикера = Колонки.Найти("SECID");
	ИндексЛота = Колонки.Найти("LOTSIZE");

	Если ИндексТикера = Неопределено Тогда
	   	Результат.ПроизошлаОшибка = Истина;
	   	Результат.ТекстОшибки = "Отсутствует колонка 'SECID' в данных";
	   	Возврат Результат;
	КонецЕсли;

	Если ИндексЛота = Неопределено Тогда
	   	Результат.ПроизошлаОшибка = Истина;
	   	Результат.ТекстОшибки = "Отсутствует колонка 'LOTSIZE' в данных";
	   	Возврат Результат;
	КонецЕсли;

	// Обрабатываем данные
	Для Каждого СтрокаДанных Из МассивДанных Цикл
	   
		Если СтрокаДанных.Количество() > Макс(ИндексТикера, ИндексЛота) Тогда
		   
			ТикерИнструмента = СтрокаДанных[ИндексТикера];
			РазмерЛота = СтрокаДанных[ИндексЛота];

			// Проверяем, что тикер есть в исходном массиве
			Если Тикеры.Найти(ТикерИнструмента) <> Неопределено Тогда
			   
				НоваяСтрока = ТаблицаЛотов.Добавить();
				НоваяСтрока.Тикер = ТикерИнструмента;
				НоваяСтрока.РазмерЛота = ?(РазмерЛота = Неопределено, 1, РазмерЛота);
			   
			КонецЕсли;
		   
		КонецЕсли;
	   
	КонецЦикла;
   
	// Добавляем отсутствующие тикеры с размером лота по умолчанию
	Для Каждого Тикер Из Тикеры Цикл
	   
	   НайденнаяСтрока = ТаблицаЛотов.Найти(Тикер, "Тикер");
	   Если НайденнаяСтрока = Неопределено Тогда
	   	
	   	НоваяСтрока = ТаблицаЛотов.Добавить();
	   	НоваяСтрока.Тикер = Тикер;
	   	НоваяСтрока.РазмерЛота = 1; // По умолчанию
	   	
	   КонецЕсли;
	   
	КонецЦикла;

	Результат.Данные = ТаблицаЛотов;

	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция _ВсеИнструменты()

	ЗапросИнструментов = Новый Запрос;
	ЗапросИнструментов.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	УА_БиржевыеИнструменты.Ссылка КАК Ссылка,
	|	УА_БиржевыеИнструменты.Код КАК Тикер,
	|	УА_БиржевыеИнструменты.Лот КАК Лот
	|ИЗ
	|	Справочник.УА_БиржевыеИнструменты КАК УА_БиржевыеИнструменты";
	
	Возврат ЗапросИнструментов.Выполнить().Выгрузить();
	
КонецФункции

Функция _ТаблицаЛотов()

	ОписаниеТипаТикера 		= Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(10));
	ОписаниеТипаРазмераЛота = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10, 0));
	
	ТаблицаЛотов = Новый ТаблицаЗначений;
	ТаблицаЛотов.Колонки.Добавить("Тикер", 		ОписаниеТипаТикера);
	ТаблицаЛотов.Колонки.Добавить("РазмерЛота", ОписаниеТипаРазмераЛота);
   
	Возврат ТаблицаЛотов;
	
КонецФункции

#КонецОбласти