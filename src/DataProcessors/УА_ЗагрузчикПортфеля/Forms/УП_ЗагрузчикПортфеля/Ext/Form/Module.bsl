// Модуль формы обработки загрузки CSV

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВыбратьФайл(Команда)
	
	// Используем НачатьПомещениеФайла напрямую - пользователь выберет файл в стандартном диалоге
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПомещенияФайла", ЭтотОбъект);
	
	Заголовок 			= "Выберите файл CSV с портфелем";
	МножественныйВыбор 	= Ложь;
	Фильтр 				= "Файлы CSV (*.csv)|*.csv|Все файлы (*.*)|*.*";
	
	ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов(Заголовок,
		МножественныйВыбор,
		Фильтр);
	
	НачатьПомещениеФайлаНаСервер(ОписаниеОповещения,,,, 
		ПараметрыДиалога, 
		ЭтотОбъект.УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПомещенияФайла(ОписаниеПомещенногоФайла, ДополнительныеПараметры) Экспорт
	
	Если ОписаниеПомещенногоФайла = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	АдресФайлаВХранилище = ОписаниеПомещенногоФайла.Адрес;
	ИмяФайла = ОписаниеПомещенногоФайла.СсылкаНаФайл.Имя;
	
	// Прочитаем и покажем данные
	ПрочитатьДанныеИзФайла();
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанныеИзФайла()
	
	Если Не ЗначениеЗаполнено(АдресФайлаВХранилище) Тогда
		Возврат;
	КонецЕсли;
	
	// Получим двоичные данные
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайлаВХранилище);
	
	// Прочитаем как текст
	ЧтениеТекста = Новый ЧтениеТекста(ДвоичныеДанные.ОткрытьПотокДляЧтения(), 
						КодировкаТекста.UTF8);
	
	// Очистим таблицу
	ТаблицаДанных.Очистить();
	
	НомерСтроки = 0;
	Пока Истина Цикл
		СтрокаТекста = ЧтениеТекста.ПрочитатьСтроку();
		
		Если СтрокаТекста = Неопределено Тогда
			Прервать;
		КонецЕсли;
		
		НомерСтроки = НомерСтроки + 1;
		
		// Пропустим заголовок
		Если НомерСтроки = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		// Разберем строку
		МассивДанных = СтрРазделить(СтрокаТекста, ";", Ложь);
		
		Если МассивДанных.Количество() >= 3 Тогда
			НоваяСтрока = ТаблицаДанных.Добавить();
			НоваяСтрока.Наименование = СокрЛП(МассивДанных[0]);
			НоваяСтрока.Тикер = СокрЛП(МассивДанных[1]);
			
			Попытка
				НоваяСтрока.Количество = Число(СокрЛП(МассивДанных[2]));
			Исключение
				НоваяСтрока.Количество = 0;
			КонецПопытки;
			
			// Попробуем найти инструмент
			НоваяСтрока.Инструмент = Справочники.УА_БиржевыеИнструменты.НайтиПоКоду(НоваяСтрока.Тикер);
			
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.Инструмент) Тогда
				НоваяСтрока.Статус = "Инструмент не найден";
			Иначе
				НоваяСтрока.Статус = "OK";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ЧтениеТекста.Закрыть();
	
	// Обновим информацию
	ВсегоСтрок = ТаблицаДанных.Количество();
	НайденоИнструментов = 0;
	
	Для Каждого Строка Из ТаблицаДанных Цикл
		Если ЗначениеЗаполнено(Строка.Инструмент) Тогда
			НайденоИнструментов = НайденоИнструментов + 1;
		КонецЕсли;
	КонецЦикла;
	
	ТекстИнформации = СтрШаблон("Загружено строк: %1. Найдено инструментов: %2", 
		ВсегоСтрок, НайденоИнструментов);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовыйПортфель(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВводаНаименованияПортфеля", ЭтаФорма);
	ПоказатьВводСтроки(ОписаниеОповещения, "", "Введите наименование нового портфеля");
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаНаименованияПортфеля(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		СоздатьНовыйПортфельНаСервере(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьНовыйПортфельНаСервере(Наименование)
	
	НовыйЭлемент = Справочники.УА_Портфели.СоздатьЭлемент();
	НовыйЭлемент.Наименование = Наименование;
	НовыйЭлемент.Записать();
	
	Портфель = НовыйЭлемент.Ссылка;
	
	// Обновим список выбора
	Элементы.Портфель.СписокВыбора.Добавить(Портфель, Наименование);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьВПортфель(Команда)
	
	Если НЕ ЗначениеЗаполнено(Портфель) Тогда
		ПоказатьПредупреждение(, "Выберите портфель для загрузки!");
		Возврат;
	КонецЕсли;
	
	Если ТаблицаДанных.Количество() = 0 Тогда
		ПоказатьПредупреждение(, "Нет данных для загрузки!");
		Возврат;
	КонецЕсли;
	
	// Проверим, что все инструменты найдены
	ЕстьНенайденные = Ложь;
	Для Каждого Строка Из ТаблицаДанных Цикл
		Если НЕ ЗначениеЗаполнено(Строка.Инструмент) Тогда
			ЕстьНенайденные = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьНенайденные Тогда
		ТекстВопроса = "В файле есть инструменты, которые не найдены в справочнике. " +
			"Создать их автоматически?";
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеОтветаОСозданииИнструментов", ЭтаФорма);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	Иначе
		ВыполнитьЗагрузкуВПортфель();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаОСозданииИнструментов(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СоздатьНедостающиеИнструменты();
		ВыполнитьЗагрузкуВПортфель();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		ВыполнитьЗагрузкуВПортфель();
	КонецЕсли;
	// При отмене ничего не делаем
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗагрузкуВПортфель()
	
	Если ЗагрузитьДанныеВПортфель() Тогда
		ПоказатьОповещениеПользователя("Загрузка завершена", , 
			"Данные успешно загружены в портфель");
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьНедостающиеИнструменты()
	
	Для Каждого Строка Из ТаблицаДанных Цикл
		Если НЕ ЗначениеЗаполнено(Строка.Инструмент) И ЗначениеЗаполнено(Строка.Тикер) Тогда
			
			НовыйИнструмент = Справочники.УА_БиржевыеИнструменты.СоздатьЭлемент();
			НовыйИнструмент.Код = Строка.Тикер;
			НовыйИнструмент.Наименование = Строка.Наименование;
			
			Попытка
				НовыйИнструмент.Записать();
				Строка.Инструмент = НовыйИнструмент.Ссылка;
				Строка.Статус = "Создан";
			Исключение
				Строка.Статус = "Ошибка создания: " + ОписаниеОшибки();
			КонецПопытки;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ЗагрузитьДанныеВПортфель()
	
	Попытка
		ОбъектПортфеля = Портфель.ПолучитьОбъект();
		
		Если РежимЗагрузки = "Заменить" Тогда
			ОбъектПортфеля.Состав.Очистить();
		КонецЕсли;
		
		Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
			Если ЗначениеЗаполнено(СтрокаДанных.Инструмент) И СтрокаДанных.Количество > 0 Тогда
				
				// Проверим, есть ли уже такой инструмент
				НайденнаяСтрока = Неопределено;
				Если РежимЗагрузки = "Дополнить" Тогда
					НайденнаяСтрока = ОбъектПортфеля.Состав.Найти(СтрокаДанных.Инструмент, "Инструмент");
				КонецЕсли;
				
				Если НайденнаяСтрока = Неопределено Тогда
					НоваяСтрока = ОбъектПортфеля.Состав.Добавить();
					НоваяСтрока.Инструмент = СтрокаДанных.Инструмент;
					НоваяСтрока.Количество = СтрокаДанных.Количество;
				Иначе
					НайденнаяСтрока.Количество = НайденнаяСтрока.Количество + СтрокаДанных.Количество;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		ОбъектПортфеля.Записать();
		Возврат Истина;
		
	Исключение
		Сообщить("Ошибка при загрузке: " + ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

#КонецОбласти

// Реквизиты формы:
// ИмяФайла - Строка
// Портфель - СправочникСсылка.УА_Портфели
// РежимЗагрузки - Строка (с выбором из списка: "Заменить", "Дополнить")
// ТекстИнформации - Строка
// АдресФайлаВХранилище - Строка
// ТаблицаДанных - ТаблицаЗначений с колонками:
//   - Наименование (Строка)
//   - Тикер (Строка)
//   - Количество (Число)
//   - Инструмент (СправочникСсылка.УА_БиржевыеИнструменты)
//   - Статус (Строка)